SELECT * FROM my_db.test;

-- 문자열 컬럼에 PK를 줬는데 특징이 NOT NULL, UNIQUE, 그리고 또다른 역할로 INDEX를 가진다
-- 이 인덱스는 숫자 인덱스랑 느낌이 다른데
-- 찾기 쉽게 만드는 '색인' 으로서 사전의 A B C 느낌이다
-- 또한 이 인덱스의 특징은 정렬이 되어야한다는 것인데(찾기 쉽도록, 컴퓨터에서는 이진검색) 기본적으로 오름차순으로 되어있다
-- 검색을 할 때 이진검색 알고리즘을 수행할 수 있으니까 기계에서는 빠른 수행이 가능해진다

SELECT * FROM my_db.test WHERE myStr = 'A'; -- 빠르게 찾을 수 있겠다
SELECT * FROM my_db.test WHERE myInt = 2; -- 하나하나 찾아야해서 성능이 느릴 것
-- GUI의 하단에서 INDEX로 컬럼에 인덱스가 있는지 볼 수 있는데 지금 test 테이블의 myStr는 PK로 인덱스가 생성되어있으며 오름차순으로 되어있다

-- 쿼리를 실행시키고나서 해당 쿼리에 대해 우측에 Execution Plan에서 어떤 동작을 하는지 순서대로 나오는데
-- 윗줄 쿼리문 실행을 보면 푸른색으로 뜨는게 최적화가 잘 되어있다는 뜻
-- 붉은 색으로 나오는 Full Table Scan은 테이블을 처음부터 끝까지 봐서 오래걸렸다는 뜻이니까 최적화를 해주는 방법으로 가야한다
-- 이런걸 확인하기 제일 쉬운 방법으로는 인덱스를 만들어주는 것이기 때문에 유니크를 활용하기도 한다

-- table 이름은 보통 소문자로 쓰는데 DB 자체가 사용하는 시스템이라던가 쓰는 회사마다의 규칙도 달라서 어떤 곳에서는 대문자를 어떤 곳에서는 한글을 쓰기도 한다